# c.f. https://circleci.com/docs/2.0/language-javascript/
version: 2.1

executors:
  grumpy-executor:
    docker:
      - image: grumpycorp/warm-and-fuzzy-ci:7
    working_directory: ~/camera-slider

jobs:
  build:
    executor: grumpy-executor
    steps:
      # Check out source
      - checkout
      - run: git submodule update --init --recursive

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}

      # Install dependencies
      - run: npm install
      - run: npm run bootstrap

      # Save cache
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # Run builds
      - run:
          name: Build
          command: |
            if [ "$CIRCLE_BRANCH" == "master" ]; then
              REACT_APP_API_STAGE=prod npm run build
            else
            npm run build
            fi
          environment:
            # Limit NodeJS heap size so we don't OOM
            NODE_OPTIONS: --max_old_space_size=1500

      - run: npm run bundle-mobile

      # Run tests
      - run: npm run test

      # Run lint
      - run: npm run lint

      # Persist workspace for deployment
      - persist_to_workspace:
          root: .
          paths:
            - packages

  firmware-deploy:
    executor: grumpy-executor
    steps:
      # Check out source
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}

      # Attach to `build` workspace (provides built packages/)
      - attach_workspace:
          at: .

      # Install dependencies
      - run: npm install
      - run: npm run bootstrap

      # (Don't save cache again, we'll just let `build` deal with it)

      # Upload firmware to Particle cloud
      - run:
          name: Upload firmware to Particle
          command: npm run deploy-firmware:prod

#
# Workflows
#

workflows:
  version: 2

  all:
    jobs:
      - build:
          context: camera-slider-particle
      - hold-to-deploy-firmware:
          type: approval
          requires:
            - build
          filters:
            branches:
              only: master
      - firmware-deploy:
          context: camera-slider-particle
          requires:
            - hold-to-deploy-firmware
          filters:
            branches:
              only: master
